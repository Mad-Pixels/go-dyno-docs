name: Update Docs

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Tag version'
        required: true
        type: string
      changelog_b64:
        description: 'Generated changelog (base64 encoded)'
        required: false
        type: string

jobs:
  update-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout docs repo
        uses: actions/checkout@v4

      - name: Prepare new version
        run: |
          VERSION="${{ github.event.inputs.version }}"
          DOCS_DIR="docs"
          
          for LOCALE_DIR in $DOCS_DIR/*; do
            if [[ -d "$LOCALE_DIR" ]]; then
              LOCALE=$(basename "$LOCALE_DIR")
              
              if [[ "$LOCALE" =~ ^[a-z]{2}$ ]]; then
                VERSIONS=($(ls -d "$LOCALE_DIR"/v* 2>/dev/null | xargs -n1 basename | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$' | sort -V))
                
                if [[ ${#VERSIONS[@]} -eq 0 ]]; then
                  echo "No stable versions found in $LOCALE_DIR, skipping."
                  continue
                fi
                
                LAST_VERSION="${VERSIONS[-1]}"
                echo "Using last stable version: $LAST_VERSION for locale $LOCALE"
                
                SRC="$LOCALE_DIR/$LAST_VERSION"
                DST="$LOCALE_DIR/$VERSION"
                
                if [[ -d "$DST" ]]; then
                  echo "Destination $DST already exists, skipping."
                else 
                  cp -r "$SRC" "$DST"
                  echo "Copied $SRC to $DST"
                fi
              fi
            fi
          done

      - name: Update changelog
        if: github.event.inputs.changelog_b64 != ''
        run: |
          VERSION="${{ github.event.inputs.version }}"
          CHANGELOG=$(echo "${{ github.event.inputs.changelog_b64 }}" | base64 -d)
          DOCS_DIR="docs"
          
          for LOCALE_DIR in $DOCS_DIR/*; do
            if [[ -d "$LOCALE_DIR" ]]; then
              LOCALE=$(basename "$LOCALE_DIR")
              
              if [[ "$LOCALE" =~ ^[a-z]{2}$ ]]; then
                CHANGELOG_FILE="$LOCALE_DIR/$VERSION/guide/changelog.md"
                
                if [[ -f "$CHANGELOG_FILE" ]]; then
                  # Create temporary file with new content
                  {
                    echo "# Changelog"
                    echo ""
                    echo "## $VERSION"
                    echo ""
                    printf '%s\n' "$CHANGELOG"
                    echo ""
                    echo "---"
                    echo ""
                    # Append existing content (skip first line if it's "# Changelog")
                    tail -n +2 "$CHANGELOG_FILE" | grep -v "^# Changelog$" || true
                  } > "$CHANGELOG_FILE.tmp"
                  
                  mv "$CHANGELOG_FILE.tmp" "$CHANGELOG_FILE"
                  echo "Updated changelog for $LOCALE_DIR/$VERSION"
                fi
              fi
            fi
          done
      
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.PAT_TOKEN }}
          commit-message: "ðŸ¤– docs: add version ${{ github.event.inputs.version }}"
          branch: "docs/${{ github.event.inputs.version }}"
          title: "ðŸš€ GoDyno new docs Release: ${{ github.event.inputs.version }}"
          body: |
            ðŸš€ A new **GoDyno** release has been detected: `${{ github.event.inputs.version }}`

            This PR contains a new versioned copy of the documentation.

            ---
            âœ… Auto-generated by CI.

            ðŸ“Œ **Before merging**, please update the documentation according to the latest changes in the CLI application.