import { defineConfig, type DefaultTheme } from 'vitepress'

async function getVersionsFromGitHub() {
  try {
    const response = await fetch('https://api.github.com/repos/Mad-Pixels/go-dyno-docs/releases')
    const releases = await response.json()
    
    const versions = releases
      .filter(release => !release.draft)
      .map(release => release.tag_name)
    
    return {
      versions,
      latestVersion: versions[0] || 'v1.0.0'
    }
  } catch (error) {
    return {
      versions: ['v1.0.0'],
      latestVersion: 'v1.0.0'
    }
  }
}

const { versions, latestVersion } = await getVersionsFromGitHub()

function createVersionDropdown(): DefaultTheme.NavItemWithLink[] {
  const items = versions.map(version => ({
    text: version === latestVersion ? `${version} (latest)` : version,
    link: `/versions/${version}/`
  }))
  
  items.push({
    text: 'üìã Changelog',
    link: 'https://github.com/Mad-Pixels/go-dyno-docs/blob/main/CHANGELOG.md',
    target: '_blank'
  })
  return items
}

export default defineConfig({
  title: "GoDyno",
  description: "DynamoDB Schema to GoLang Code",
  
  rewrites: {
    'en/:rest*': ':rest*'
  },

  lastUpdated: true,
  cleanUrls: true,
  metaChunk: true,

  locales: {
    root: {
      label: 'English',
      lang: 'en',
      title: 'GoDyno',
      description: 'DynamoDB Schema to GoLang Code',
      themeConfig: {
        nav: [
          { text: 'Home', link: '/' },
          { text: 'Guide', link: '/guide/' },
          { text: 'Examples', link: '/examples/' },
          { text: 'API Reference', link: '/api/' },
          {
            text: latestVersion,
            items: createVersionDropdown()
          }
        ],

        sidebar: {
          '/guide/': [
            {
              text: 'Getting Started',
              items: [
                { text: 'Introduction', link: '/guide/' },
                { text: 'Installation', link: '/guide/installation' },
                { text: 'Quick Start', link: '/guide/quick-start' }
              ]
            },
            {
              text: 'Core Concepts',
              items: [
                { text: 'Schema Definition', link: '/guide/schema' },
                { text: 'Code Generation', link: '/guide/generation' },
                { text: 'Query Builder', link: '/guide/querybuilder' }
              ]
            },
            {
              text: 'Advanced',
              items: [
                { text: 'Terraform Integration', link: '/guide/terraform' },
                { text: 'Composite Keys', link: '/guide/composite-keys' },
                { text: 'Secondary Indexes', link: '/guide/indexes' }
              ]
            }
          ],
          '/examples/': [
            {
              text: 'Examples',
              items: [
                { text: 'Simple Table', link: '/examples/simple' },
                { text: 'E-commerce', link: '/examples/ecommerce' },
                { text: 'Social Media', link: '/examples/social' },
                { text: 'Analytics', link: '/examples/analytics' }
              ]
            }
          ],
          '/api/': [
            {
              text: 'API Reference',
              items: [
                { text: 'CLI Commands', link: '/api/cli' },
                { text: 'Schema Format', link: '/api/schema' },
                { text: 'Generated Code', link: '/api/generated' }
              ]
            }
          ]
        },

        socialLinks: [
          { icon: 'github', link: 'https://github.com/Mad-Pixels/go-dyno' }
        ],

        footer: {
          message: 'Released under the MIT License.',
          copyright: 'Copyright ¬© 2025 Mad-Pixels'
        }
      }
    },
    
    ru: {
      label: '–†—É—Å—Å–∫–∏–π',
      lang: 'ru',
      title: 'GoDyno',
      description: '–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä Go –∫–æ–¥–∞ –∏–∑ —Å—Ö–µ–º DynamoDB',
      themeConfig: {
        nav: [
          { text: '–ì–ª–∞–≤–Ω–∞—è', link: '/ru/' },
          { text: '–†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ', link: '/ru/guide/' },
          { text: '–ü—Ä–∏–º–µ—Ä—ã', link: '/ru/examples/' },
          { text: 'API –°–ø—Ä–∞–≤–∫–∞', link: '/ru/api/' },
          {
            text: latestVersion,
            items: createVersionDropdown().map(item => ({
              ...item,
              link: item.link.startsWith('http') ? item.link : `/ru${item.link}`
            }))
          }
        ],

        sidebar: {
          '/ru/guide/': [
            {
              text: '–ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã',
              items: [
                { text: '–í–≤–µ–¥–µ–Ω–∏–µ', link: '/ru/guide/' },
                { text: '–£—Å—Ç–∞–Ω–æ–≤–∫–∞', link: '/ru/guide/installation' },
                { text: '–ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç', link: '/ru/guide/quick-start' }
              ]
            },
            {
              text: '–û—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–Ω—è—Ç–∏—è',
              items: [
                { text: '–û–ø–∏—Å–∞–Ω–∏–µ —Å—Ö–µ–º—ã', link: '/ru/guide/schema' },
                { text: '–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–¥–∞', link: '/ru/guide/generation' },
                { text: 'Query Builder', link: '/ru/guide/querybuilder' }
              ]
            },
            {
              text: '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–µ',
              items: [
                { text: '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Terraform', link: '/ru/guide/terraform' },
                { text: '–°–æ—Å—Ç–∞–≤–Ω—ã–µ –∫–ª—é—á–∏', link: '/ru/guide/composite-keys' },
                { text: '–í—Ç–æ—Ä–∏—á–Ω—ã–µ –∏–Ω–¥–µ–∫—Å—ã', link: '/ru/guide/indexes' }
              ]
            }
          ],
          '/ru/examples/': [
            {
              text: '–ü—Ä–∏–º–µ—Ä—ã',
              items: [
                { text: '–ü—Ä–æ—Å—Ç–∞—è —Ç–∞–±–ª–∏—Ü–∞', link: '/ru/examples/simple' },
                { text: 'E-commerce', link: '/ru/examples/ecommerce' },
                { text: '–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏', link: '/ru/examples/social' },
                { text: '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞', link: '/ru/examples/analytics' }
              ]
            }
          ],
          '/ru/api/': [
            {
              text: 'API –°–ø—Ä–∞–≤–∫–∞',
              items: [
                { text: 'CLI –∫–æ–º–∞–Ω–¥—ã', link: '/ru/api/cli' },
                { text: '–§–æ—Ä–º–∞—Ç —Å—Ö–µ–º—ã', link: '/ru/api/schema' },
                { text: '–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–¥', link: '/ru/api/generated' }
              ]
            }
          ]
        },

        socialLinks: [
          { icon: 'github', link: 'https://github.com/Mad-Pixels/go-dyno' }
        ],

        footer: {
          message: '–í—ã–ø—É—â–µ–Ω–æ –ø–æ–¥ –ª–∏—Ü–µ–Ω–∑–∏–µ–π MIT.',
          copyright: 'Copyright ¬© 2025 Mad-Pixels'
        }
      }
    }
  },

  sitemap: {
    hostname: 'https://go-dyno.madpixels.io/'
  },

  head: [
    ['link', { rel: 'icon', type: 'image/png', href: '/logo.png' }],
    ['meta', { name: 'theme-color', content: '#646cff' }],
    ['meta', { property: 'og:type', content: 'website' }],
    ['meta', { property: 'og:site_name', content: 'GoDyno' }]
  ]
})